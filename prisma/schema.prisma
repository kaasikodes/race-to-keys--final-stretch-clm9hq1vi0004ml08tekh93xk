// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    phone         String?   @unique
    emailVerified DateTime? @default(now())
    password      String?
    catch_phrases      String?
    image         String?
    accounts      Account[]
    sessions      Session[]
    privateKey    PrivateKey?
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
}
model PrivateKey {
    id            String    @id @default(cuid())
    value_via_catch_phrases   String? @db.Text
    value_via_password   String? @db.Text
    userId        String @unique
    user  User?  @relation(fields: [userId], references: [id])
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt

    @@index([userId])
}


model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@index([userId])
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@index([userId])

    @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
